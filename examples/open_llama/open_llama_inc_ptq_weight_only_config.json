{
    "input_model":{
        "type": "OptimumModel",
        "config": {
            "model_path": "openlm-research/open_llama_3b",
            "model_components": ["decoder_model.onnx", "decoder_with_past_model.onnx"],
            "hf_config": {
                "model_class": "LlamaForCausalLM"
            }
        }
    },
    "evaluators": {
        "common_evaluator": {
            "metrics": [
                {
                    "name": "accuracy",
                    "type": "custom",
                    "sub_types": [
                        {"name": "accuracy_custom", "higher_is_better": true}
                    ],
                    "user_config":{
                        "user_script": "user_script.py",
                        "evaluate_func": "eval_accuracy",
                        "batch_size": 1
                    }
                }
            ]
        }
    },
    "passes": {
        "convert": {
            "type": "OptimumConversion",
            "config": {
                "target_opset": 14,
                "save_as_external_data": true,
                "all_tensors_to_one_file": true
            }
        },
        "optimize": {
            "type": "OrtTransformersOptimization",
            "config": {
                "model_type": "gpt2",
                "use_gpu": false,
                "keep_io_types": true,
                "num_heads": 32,
                "hidden_size": 4096,
                "optimization_options": {
                    "use_multi_head_attention": false
                },
                "save_as_external_data": true,
                "all_tensors_to_one_file": true
            }
        },
        "quantization": {
            "type": "IncStaticQuantization",
            "disable_search": true,
            "config": {
                "user_script": "user_script.py",
                "dataloader_func": "create_onnx_dataloader",
                "approach": "weight_only",
                "calibration_sampling_size": [8],
                "op_type_dict": {".*": {"weight": { "bits": 4, "group_size": 32, "scheme": "sym", "algorithm": "RTN"}}},
                "save_as_external_data": true,
                "all_tensors_to_one_file": true
            }
        }
    },
    "engine": {
        "evaluator": "common_evaluator",
        "cache_dir": "cache",
        "output_name": "ollama",
        "output_dir": "footprints"
    }
}
